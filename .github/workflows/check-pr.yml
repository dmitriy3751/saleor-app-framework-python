name: check_build
on: pull_request

jobs:
  documentation:
    name: Check Pull request
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python runtime
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          poetry config virtualenvs.create true
          poetry config virtualenvs.in-project true
          poetry config --list

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install Python dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Run linters
        run: |
          poetry run black --check src/saleor_app/
          poetry run isort --check src/saleor_app/
          poetry run flake8 src/saleor_app/

      - name: Run docs build test
        run: poetry run mkdocs build -s

      - name: Run unit tests
        run: |
          poetry run coverage erase
          poetry run coverage run --source="saleor_app" -p -m pytest src/saleor_app
          poetry run coverage combine
          poetry run coverage report --fail-under=90
